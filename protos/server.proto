syntax = "proto3";

package session;

// The sessions manager service definition.
service SessionsManager {
  // Creates a new session.
  rpc Create (NewSessionRequest) returns (Session) {}
  // Join a session.
  rpc Join (JoinRequest) returns (Session) {}
  // Leave a session.
  rpc Leave (LeaveRequest) returns (LeaveReply) {}
  // Set the max amount of players that can be in the session.
  rpc SetMax (SetMaxPlayersRequest) returns (Session) {}
  // Kick player.
  rpc Kick (User) returns (Session) {}
  // Set the name of the session.
  rpc SetName (SetNameRequest) returns (Session) {}
  // List available sessions.
  rpc List (ListRequest) returns (ListReply) {}
  // Get session by ID
  rpc GetSessionById (GetSessionRequest) returns (Session) {}
}

message GetSessionRequest {
  string auth_id_token = 1;
  string session_id = 2;
}

/*
  Requires the firebase id token.
  Requires the name of the new session.
*/
message NewSessionRequest {
  string auth_id_token = 1;
  string name = 2;
  uint32 max_players = 3;
}

/*
  Requires the firebase id token.
  Requires the number of sessions to list.
*/
message ListRequest {
  string auth_id_token = 1;
  uint32 limit = 2;
  // This will include sessions that are full.
  bool full = 3;
}

/*
  Requires the firebase id token.
  Requires the uuid of the session to leave.
*/
message LeaveRequest {
  string auth_id_token = 1;
  string session_id = 2;
}

/*
  Requires the firebase id token.
  Requires the uuid of the session to join.
*/
message JoinRequest {
  string auth_id_token = 1;
  string session_id = 2;
}

/*
  Requires the firebase id token.
  Requires the number of max players the session may have.
*/
message SetMaxPlayersRequest {
  string auth_id_token = 1;
  uint32 number = 2;
  string session_id = 3;
}

message SetNameRequest {
  string auth_id_token = 1;
  string session_id = 2;
  string name = 3;
}

message ListReply {
  repeated Session sessions = 1;
  string status = 2;
}

message LeaveReply {
  string status = 1;
  string status_message = 2;
}

message Session {
  string status = 1;
  string status_message = 2;
  // Session uuid
  string session_id = 3;
  // The session's name
  string name = 4;
  // The dungeon master: UID of user
  User dungeon_master = 5;
  string date_created = 6;
  uint32 max_players = 7;
  repeated User users = 8;
  // Determines if the session is public or private
  bool private = 9;
  bool full = 10;
}

message User {
  string uid = 1;
  string name = 2;
}